.my-thumbnail {
	display: block;
	margin: 4rem auto;
	max-width: 70%;
	opacity: 0.2;
	border: 3px solid transparent;

	/* animacja */
	/* tutaj ustawia się właściwość która będzie animowana, jeżeli jest więcej niz jedna to oddziela się je przecinkiem, albo "all" dla wszystkich właściwości */
	transition-property: opacity;

	/* ustawienie długości trwania animacji */
	transition-duration: 2s;

	/* 
		sposób animacji 
		- linear - stałe tempo zmiany
		- ease - ma szybk start i koniec, wolny środek
		- ease-in-out - powolny start ,później przyspiesza i na koniec znowu zwalnia
		- cubic-bezier(x, x, x, x) - funkcja z 4 parametrami, ustawiającymi sposób animacji, są gotowe edytory generujące te animacje
	*/
	transition-timing-function: cubic-bezier(0.980, 0.015, 0.950, 0.365);

	/* opóźnienie startu animacji o podany czas */
	transition-delay: 1s;

	/* te 4 ustawienia można ustawić w 1 linii: property duration timing-function delay */
	transition: all .5s linear;
}

.my-thumbnail:hover {
	cursor: pointer;
	opacity: 1;
	border: 3px solid rgb(224, 73, 73);
	max-width: 73%;
}

.some-container {
	font-size: 3rem;
	width: 100%;
	height: 100vh;
	background: #8383e4;
}

.some-circle {
	height: 100px;
	width: 100px;
	border-radius: 50%;
	background: #098824;
	color: #fff;
	display: flex;
	justify-content: center;
	align-items: center;
}

.some-circle:hover {
	cursor: pointer;
}

.some-circle--transform:hover {
	/* przesunięcie elementu */

	/* funkcja: translate(przesunięcie-w-poziomie, pzesunięcie-w-pionie) */
	transform: translate(50px, 10px);

	/* rotacja względem osi X */
	transform: rotateX(360deg);

	/* zwykła rotacja o podany kąt, wartość ujemna kręci się w 2 stronę */
	transform: rotate(180deg);

	/* 
			skalowanie, czyli powiększanie/pomniejszanie elementów, przyjmuje 1 albo 2 parametry:
			scale(1.2) - powiększenie elementu o 20%
			scale(1.5, 2.5) - powiększenie względem osi X o 50% i względem osi Y o 150%
		 */
	transform: scale(1.2);

	/* pochylanie elementów */
	transform: skewX(20deg);
	/* jednoczesne pochylenie względem osi X, pochylenie względem osi Y */
	transform: skew(20deg, 30deg);
}

/* 
	całe animacje 

	po @keyframes podaje sie nazwę animacji
	można ją zdefiniować za pomocą procentów lub za pomocą "from to"
*/
/* tutaj za pomocą %, można ustawiać dowolne wartości i dowolną ilość kroków */
@keyframes animationRotate {
	0% {
		transform: rotate(0);
	}

	50% {
		transform: rotate(100deg);
	}

	100% {
		transform: rotate(360deg);
	}
}

/* tutaj za pomocą "from to", czyli od wartości początkowej do końcowej */
@keyframes animationRotate2 {
	from {
		transform: rotate(0);
	}

	to {
		transform: rotate(360deg);
	}
}

@keyframes changeColor {

	/* from {
		background: #000;
	}

	to {
		background: #d10707;
	} */
	0% {
		background: #000;
	}

	50% {
		background: #d10707;
	}

	100% {
		background: #000;
	}
}

@keyframes slideIn {
	0% {
		transform: translateX(0%);
		/* background: #000; */
	}

	50% {
		transform: translateX(100%);
		/* background: #d10707; */
	}

	100% {
		transform: translateX(0%);
		/* background: #000; */
	}
}

.some-circle--animation2 {
	/* uruchomienie animacji */
	/* 1 sposób: definiowanie po kolei różnych właściwości*/
	animation-name: animationRotate;
	animation-duration: 1s;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
	animation-delay: 0;

	/* 2 sposób: wszystko w 1 linii: nazwa-animacji duration timing-function iteration-count*/
	animation: animationRotate2 1s linear infinite;
}

.some-circle--animation1 {
	/* ustawienie animacji do przesunięcia elementu */
	transition: transform .6s linear;

	animation: changeColor 1s linear infinite;
}

.some-circle--animation3 {
	/* 2 animacje ustawione dla 1 elementu */
	animation: slideIn 1s linear infinite, changeColor 1s linear infinite;
}

/* ***** loading spinner ***** */
.wrapper {
	position: relative;
	font-size: 2rem;
}

.loading-overlay {
	display: none;
	/* display: flex; */
	justify-content: center;
	align-items: center;
	background: rgba(59, 55, 55, 0.3);
	width: 100%;
	height: 100%;
	position: absolute;
	z-index: 10;
}

.loading-gif {
	border: 13px solid #f3f3f3;
	border-top: 13px solid #3498db;
	width: 80px;
	height: 80px;
	z-index: 11;
	border-radius: 50%;
	animation: spin .6s linear infinite;
}

@keyframes spin {
	0% {
		transform: rotate(0);
	}

	100% {
		transform: rotate(360deg);
	}
}

/* HOMEWORK */
/* my solution */
.balls {
	font-size: 3rem;
	width: 100%;
	height: auto;
	padding: 10px;
	background: rgb(172, 245, 245);
}

.balls__ball {
	width: 50px;
	height: 50px;
	background: #d10707;
	border-radius: 50%;
	margin: 20px;
}

.balls__ball--animation1 {
	animation: 3s linear 0.2s infinite go-left-right;
}

.balls__ball--animation2 {
	animation: 3s linear 0.4s infinite go-left-right;
}

.balls__ball--animation3 {
	animation: 3s linear 0.6s infinite go-left-right;
}

.balls__ball--animation4 {
	animation: 3s linear 0.8s infinite go-left-right;
}

.balls__ball--animation5 {
	animation: 3s linear 1s infinite go-left-right;
}

@keyframes go-left-right {
	0% {
		transform: translateX(0%);
	}

	50% {
		transform: translateX(calc(100vw - 80px));
	}

	100% {
		transform: translateX(0%);
	}
}

.grid {
	display: grid;
	grid-template: 1fr / repeat(3, 1fr);
}

.grid__item {
	margin: 30px;
	color: #fff;
}

.grid__item:hover {
	cursor: pointer;
}

.grid__header {
	background: #d10707;
	font-weight: normal;
	text-align: center;
}

.grid__text {
	background: #000;
	font-weight: normal;
	text-align: center;
}

/* course solution */
.animated {
	margin-top: 3rem;
	height: 160px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	padding: 10px;
}

.animated-circle {
	width: 20px;
	height: 20px;
	background: rgb(231, 47, 47);
	border-radius: 50%;
	animation: circleMove 3s linear infinite;
}

.animated-circle--2 {
	animation-delay: .2s;
}

.animated-circle--3 {
	animation-delay: .4s;
}

.animated-circle--4 {
	animation-delay: .6s;
}

.animated-circle--5 {
	animation-delay: .8s;
}

@keyframes circleMove {
	0% {
		transform: translate(0);
	}

	50% {
		transform: translate(calc(100vw - 60px));
	}

	100% {
		transform: translate(0);
	}
}

.wrapper3 {
	margin: 20px;
	margin-bottom: 70px;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
}

.card {
	margin: 30px;
	color: #fff;
	opacity: .7;
	transition: all .3s linear;
}

.card__header {
	background: rgb(231, 47, 47);
	padding: 10px;
	text-align: center;
	font-size: 3.1rem;
	color: #fff;
}

.card__body {
	background: #000;
	padding: 15px;
}

.card:hover {
	cursor: pointer;
	opacity: 1;
	color: #eaec74;
	transform: scale(1.1);
}

/* java script */
.btn-gif {
	font-size: 3rem;
	margin: 4rem;
}

/* jQuery */
.hidden {
	display: none;
}