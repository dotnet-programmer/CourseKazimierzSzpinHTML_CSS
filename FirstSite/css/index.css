/* @import "./main-style.css"; */

/* ustawienie klasy */
.homework {
    margin: 5rem;
    font-size: 2rem;
}

.header-h2 {
    color: green;
}

.header-h3 {
    color: orange;
}

.span-class {
    background: greenyellow;
}

.main {
    background-color: black;
    font-size: 30px;
}

.card {
    color: #ff0000;
}

.card-div {
    color: #ffff00;
}

.card-header {
    color: #ffffff;
}

.card-p {
    color: #00ffff;
}

/* ustawienie elementu podrzędnego (potomka) - element z klasą table ma w sobie element z klasą highlight */
.table .highlight {
    color: blueviolet;
}

/* ustawienie elementu który ma kilka klas */
.table.table-main {
    background: yellow;
}

/* ustawienie następnego sąsiada, tylko jeśli pierwszy element ma klasę first, a następny klasę second 
czyli te ustawienia dotyczą elementu z klasą second, ale tylko wtedy gdy jej poprzednikiem jest elemennt z klasą first */
.first+.second {
    /* rgba - dodatkowy 4 parametr ustala przezroczystość w skali od 0-1 */
    background: rgba(0, 0, 0, 0.5);
    color: white;
}

/* ustawienie tylko bezpośredniego potomka */
.second>.direct-descendant {
    color: red;
}

/* zapis z dwukropkiem oznacza że będzie używana tzw. pseudoklasa */
/* ustawienie pierwszego dziecka - dla klasy links i potomka li ale tylko pierwszego dziecka */
.links li:first-child {
    background: silver;
}

/* ustawienie ostatniego dziecka - dla klasy links i potomka li ale tylko ostatniego dziecka */
.links li:last-child {
    background: aquamarine;
}

/* ustawienie pierwszego i ostatniego dziecka w przypadku, gdy te sutawienia są takie same dla obu elementów */
.links-2 li:first-child,
.links-2 li:last-child {
    background: green;
}

/* ustawienie dla 5 elementu (5 dziecko) */
.links li:nth-child(5) {
    background: red;
}

/* ustawienie co 2 dziecka elementu */
.links-3 li:nth-child(2n) {
    background: green;
}

.text {
    font-family: Helvetica, Arial, Verdana, sans-serif;
    font-size: 20px;
    font-weight: 900;
    font-style: italic;
    line-height: 1.3;
    letter-spacing: 1px;
    color: #ffffff;
    background: #000000;
    text-decoration: underline;
    text-align: justify;
    text-transform: lowercase;
}

.units {
    width: 100%;
    height: 400px;
    background: #00ff4c;
    color: #ffffff;
    font-size: 20px;
}

.unit {
    width: 32%;
    background: blueviolet;
    color: #ffffff;
    font-size: 20px;
    text-align: center;
    vertical-align: top;
    /* określenie jak ma sie wyświetlić, czyli czy ma zarezerwować całą szerokość, czy tylko tyle ile potrzeba na wyświetlenie zawartości */
    display: inline-block;
    height: 50px;
    /* przepełnienie - overflow
    visible - jeśli zawartość nie mieści się w kontenerze, to po prostu wychodzi poza ten element
    auto - jeśli zawartość nie mieści się w kontenerze, to dodane zostaną scrollbary i zawartość zostanie w rozmiarach kontenera
    hidden - jeśli zawartość nie mieści się w kontenerze, to wychodzi poza ten element ale poza nim jest niewidoczna 
    scroll - nawet jak zawartość mieści się w kontenerze, to dodane zostaną scrollbary i zawartość zostanie w rozmiarach kontenera */
    overflow: auto;

    margin-top: 1rem;
}

.unit:hover {
    background: #d2691e;
    /* po najechaniu na element kursor myszy zamienia się na rękę do klikania */
    cursor: pointer;
}

.units-2 {
    /* jednostka viewport - jednostka relatywna do szerokości lub wysokości urządzenia mobilnego lub okna przeglądarki
    vw - viewport width - relatywna szerokość w odniesieniu do szerokości urządzenia/okna przeglądarki*/
    /* działa to tak, że 100vw ustawia 100% szerokości urządzenia */
    width: 50vw;

    /* vh - viewport height - relatywna wysokość w odniesieniu do szerokości urządzenia/okna przeglądarki */
    height: 30vh;
    background: #00ff4c;
    color: #ffffff;
    font-size: 20px;
}

.units-paragraph {
    /* jednostka em jest relatywna w stosunku do rodzica, czyli 2em oznacza 2x wieksze niż ustawienia rodzica */
    /* font-size: 2em; */

    /* rem - root em - jednostka relatywna do elementu root, czyli znacznika <html>
    jeśli nie jest ustawiona wartość to pobierana jest domyślna wartość przeglądarki, czyli 16px */
    /* można zrobić tak, że w elemencie html ustawia się font-size na 62.5%, co daje 10px, wtedy ustawiając rem np na 2.5 daje czcionkę 25 */
    font-size: 2rem;
}

.link {
    font-size: 2.5rem;
    font-style: italic;
    text-decoration: none;
    color: #ffffff;
    background: #000000;

    /* obramowanie: szerokość typ_obramowania(solid, dotted, dashed) kolor */
    border: 5px dotted #ff0000;
    border-top: 5px solid #ffff00;

    /* zaokrąglenie obramowania */
    border-radius: 25px;
    border-bottom: 0;

    display: inline-block;

    /* padding - odległość od zawartości do krawędzi */
    /* padding dla każdego boku osobno */
    padding-left: 15px;
    padding-right: 15px;
    padding-top: 5px;
    padding-bottom: 5px;

    /* padding dla wszystkich boków tak samo */
    padding: 7px;

    /* padding dla każdego boku osobno, liczenie zaczyna się od góry, później prawo, dół i lewo */
    padding: 5px 15px 5px 15px;

    /* padding jeśli góra-dół i lewo-prawo jest takie samo */
    padding: 1rem 3rem;

    /* margines - odległość od krawędzi do zewnątrz */
    /* margines można ustawiać na takie same sposoby jak padding */
    /* margines jest odległością od elementu, a nie od jego marginesu, dlatego 2 elementy z marginesami 10px są oddalone o 10px a nie 20px */
    /* margines może być ujemny */
    margin: 20px;
}

.circle {
    width: 100px;
    height: 100px;
    background: #00ff4c;
    border: 1px solid #000000;
    border-radius: 50%;
}

.div1,
.div2 {
    border: 1px solid #000000;
    padding: 10px;
    margin: 10px;
}

/* link, który nie był jeszcze kliknięty */
.link:link {
    color: rgb(19, 192, 77);
}

/* link, który już był kliknięty */
.link:visited {
    color: rgb(8, 5, 192);
}

/* kursor myszy znajduje się nad linkiem 
hover - hand over */
.link:hover {
    color: rgb(192, 189, 5);
    background: #ff0000;
}

/* link, który obecnie jest klikany */
.link:active {
    color: rgb(192, 5, 161);
}

/* ustawienie identyfikatora id */
#my-header-h4 {
    background-color: blue;
    font-size: 30px;
}

/* ustawienie specyficzności - suma ważności ustawień id i klasy */
#span-id.span-class {
    background: #00ffff;
}

/* box model - model pudełkowy składa się z (liczone od środka): zawartości, paddingu, obramowania i marginesu */
.rectangle {
    width: 100px;
    height: 100px;
    background: #ff0000;
    border: 5px solid #000000;
    padding: 5px;
    margin: 10px;
}

.box {
    background: #00ffff;
    width: 300px;
    height: 300px;
    margin-bottom: 100px;
}

.inner-box {
    background: #ffff00;
    width: 100px;
    height: 100px;
    padding: 10px;
    border: 5px solid #000000;
}

/* dodanie cienia */
.box-shadow {
    /* cień - przesunięcie cienia w poziomie (w prawą strone) - przesunięcie cienia w pionie (w dół) - blur (rozmycie) - sprit (rozprzestrzenianie się cienia) - kolor */
    /* wartości ujemne przesuwają cień w przeciwną stronę */
    box-shadow: 10px 5px 15px 5px #00c3ff;
}

.header-text {
    width: 80%;

    /* pozycjonowanie elementu na stronie poprzez "przepływ" */
    float: left;
}

.header-img {
    width: 20%;
    float: right;
}

.footer-text {
    /* wyczyszczenie poprzedniego pozycjonowania tekstu, bez tego obowiązuje poprzednio ustawiona opcja float */
    clear: both;
}

/* ukrywanie / pokazywanie elementów */
/* różnica między display a visibility 
- display: none całkowicie usuwa element ze strony
- visibility: hidden ukrywa element, ale nadal pozostaje po nim puste miejsce */
.some-text {
    /* ukrywa element w html */
    display: none;
}

.some-text-2 {
    visibility: hidden;
}

.article:hover {
    cursor: pointer;
}

.article:hover .some-text {
    display: block;
}

.article:hover .some-text-2 {
    visibility: visible;
}

/* !ukrywanie / pokazywanie elementów */

/* stylowanie listy */
.list li {
    list-style: none;
    margin: 0;
    padding: 0;
}

.list-element {
    text-decoration: underline;
    padding: 3px 6px;
    font-size: 2.5rem;
}

/* !stylowanie listy */

/* stylowanie tabeli */
.table-2 {
    width: 100%;
    border-collapse: collapse;
}

.table-2,
.table-th,
.table-td {
    border: 1px solid #000000;
}

.table-2 tr:nth-child(2n) {
    background: #00ffff;
    color: blue;
}

.table-2 tr:hover {
    cursor: pointer;
    background: #2e2e2e;
    color: #ffffff;
}

.table-td,
.table-th {
    height: 50px;
    text-align: center;
    vertical-align: center;
    padding: 10px;
}

.table-col-first,
.table-col-second {
    width: 20%;
}

/* !stylowanie tabeli */

/* stylowanie obrazów */
.my-image {
    display: block;
    /* max-width: 100%; */

    /* obliczanie rozmiaru - 20 px odejmowane jest od prawej strony */
    max-width: calc(100% - 20px);

    /* ustawienie bocznych marginesów powoduje wyśrodkowanie zdjęcia */
    margin: 10px auto;

    /* takie ustawienie marginesu spowoduje przesunięcie obrazka do prawej */
    /* margin-left: auto;
    margin-right: 0; */

    max-height: 200px;
    border-radius: 30px;
    border: 1px solid #000000;
    padding: 5px;
}

/* !stylowanie obrazów */

/* BEM */

/* Menu */
.menu {
    margin: 1rem 1rem;
}

.menu__list {
    list-style: none;
    margin: .5rem 0;
}

.menu__item {
    font-weight: bold;
}

.menu__item:hover {
    cursor: pointer;
}

.menu__item--active {
    color: var(--color-primary);
}

/* Button */
.button {
    border-radius: 2rem;
    border: var(--border-mian);
    padding: 2rem;
}

.button:hover {
    cursor: pointer;
}

.button__image {
    width: 100px;
    margin: auto;
}

.button__text {
    font-weight: bold;
    margin-top: 1rem;
}

.button--primary {
    /* użycie zdefiniowanej zmiennej */
    background: var(--color-primary);
    color: #ffffff;
}

.button--succes {
    background: #00aa25;
    color: #ffffff;
}

.button--danger {
    background: #ff0000;
    color: #ffffff;
}

.menu__button {
    display: block;
    margin: 1rem 0;
}

.button--space {
    margin: var(--margin-small);
}

/* !BEM */

.first-icon {
    display: block;
    margin: 3rem;
    color: var(--color-primary);
    background: #00aa25;
    padding: 2rem;
    border-radius: 50%;

    /* zmiana rozmiaru kony musi być poprzez font-size a nie wysokość czy szerokość */
    font-size: 5rem;

    /* dopasowanie szerokości elementu do zawartości */
    width: fit-content;
}

.first-icon:hover {
    color: #ffff00;
    cursor: pointer;
}

/* strony responsywne - media queries? */
/* urządzenia mobilne - ten styl zostanie zastosowany dla wszystkich ekranów o max szerokości 768px*/
@media screen and (max-width: 768px) {
    .header__image {
        display: block;
        width: 90%;
        margin: 2rem auto;
    }
}

/* tablety */
@media screen and (min-width: 769px) and (max-width: 1200px) {
    .header__image {
        width: 40%;
        margin: 1rem 2rem;
    }
}

@media screen and (min-width: 1201px) {
    .header__image {
        display: inline-block;
        margin: 5px;
        width: 21%;
    }
}

/* !strony responsywne */

/* 
    ustawianie pozycji elementu względem innego elementu

    static - statyczny 
    relative - względne - względem siebie (element jest przesuwany o podane wartości, ale nadal zajmuje to miejsce wśród innych elementów
    absolute - bezwględny/niezależny - nie zajmuje miejsca wśród innych elementów, bez ustawienia elementu nadrzędnego na relative, będzie pozycjonowany względem przeglądarki
    fixed - ustalony (przyczepiony do pewnego obszaru względem ekranu po załadowaniu, zostaje na swoim miejscu nawet jak strona jest dłuższa niż ekran i pojawia się scroll)
    sticky - element zostaje na stronie, ale trzeba ustawić wartość top:
        przykład 50px, wtedy gdy między górną częścią strony a początkiem elementu zostanie 50px, to element zostanie na swoim miejscu i będzie cały czas pomimo scrollowania
    
    dostępne pozycje wg. których można ustalić położenie: top, right, bottom, left
*/
.container {
    width: 90%;
    height: 200px;
    background: rgb(107, 106, 106);
    margin: 5rem 3rem;
    border-radius: 20rem;
    /* element nadrzędny musi mieć to ustawienie */
    position: relative;
}

.container__icon {
    /* element podrzędny musi mieć to ustawienie */
    position: absolute;
    top: 50%;
    left: 50%;
}

.sticker {
    /* to ustawienie powoduje "przyklejenie" elementu na swoim miejscu tak, że jest zawsze widoczne nawet po scrolowaniu strony */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    text-align: center;
    padding: 1rem 0;
    color: #ffffff;
    background: #ff0000;
    /* ustawienie z-index na większą wartość powoduje, że element jest nad elementami z niższą wartościa z-index, domyślnie jest 0, ustawienie ujemne - element jest pod innymi */
    z-index: -1;
}

.sticker-2 {
    position: sticky;
    top: 0;
    text-align: center;
    padding: 1.2rem;
    color: #ffffff;
    background: #471212;
    margin: 0;
    z-index: 1;
}

/* !ustawianie pozycji elementu względem innego elementu */

/* pseudoelementy */
.simple-container {
    margin: 1rem;
    position: relative;
}

.simple-container::first-line {
    background: #00ff4c;
}

.simple-container::first-letter {
    font-size: 4rem;
    color: #0000ff;
    margin-left: 4rem;
}

/* dodaje content przed elementem z klasą simple-container */
.simple-container::before {
    /* content: 'Pseudoelement BEFORE';
    margin-right: 3rem;
    color: #d21e1e;
    background: #aa9900;
    border-radius: 10rem;
    padding: 2px; */
    position: absolute;
    top: 0;
    left: 25px;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: #00aa25;
    content: '';
    z-index: -1;
    opacity: .5;
}

/* dodaje content po elemencie z klasą simple-container */
.simple-container::after {
    content: 'Pseudoelement AFTER';
    margin-right: 3rem;
    color: #d21e1e;
    background: #00aaa2;
    border-radius: 10rem;
    padding: 2px;
}

.some-list {
    list-style: none;
}

.some-element {
    margin-top: 5px;
}

.some-element::before {
    content: '✅';
}

/* odniesienie do elementu z własnym atrybutem data-help */
[data-help] {
    cursor: help;
}

[data-help]:hover::after {
    /* attr - attribute - atrybut - używany do pobrania wartości z atrybutu o podanej nazwie*/
    content: attr(data-help);
    background-color: rgba(0, 255, 255, 0.781);
    padding: 15px;
    position: absolute;
    border-radius: 10px;
}

/* !pseudoelementy */

/* obraz jako tło strony */
.hero {
    width: 100%;
    height: 100vh;
    position: relative;
}

.hero__bg {
    position: relative;
    width: 100%;
    height: 100vh;
    background: url(../images/bg.png);
    background-color: #faebd7;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: auto;

    /* przezroczystość */
    opacity: .5;
}

.hero__text {
    position: absolute;
    top: 20%;
    /* ustawienie left i right na 0 powoduje wyśrodkowanie */
    left: 0;
    right: 0;
    text-align: center;
    font-size: 4rem;
    margin: 0;
    padding: 10rem;
    line-height: 2;
    font-weight: bold;
}

/* !obraz jako tło strony */

/* menu rozwijane */
#menu-rozwijane {
    background: #0f3250;
    padding: 15px;
}

#menu-rozwijane a {
    color: white;
    text-decoration: none;
}

#menu-rozwijane>ul>li>a {
    padding: 20px 0;
    margin-left: 10px;
}

#menu-rozwijane ul {
    list-style-type: none;
}

#menu-rozwijane ul li {
    display: inline-block;
    margin-left: 10px;
    position: relative;
}

.submenu {
    position: absolute;
    top: 40px;
    display: none;
}

#menu-rozwijane ul li:hover .submenu {
    display: block;
}

.submenu::before {
    content: '';
    height: 10px;
    width: 100%;
    position: absolute;
    top: -10px;
}

.submenu a {
    background-color: #0f3250;
    display: block;
    padding: 20px;
    width: 150px;
    text-align: center;
}

.submenu a:hover {
    background-color: rgba(15, 50, 80, 0.9);
}

/* !menu rozwijane */